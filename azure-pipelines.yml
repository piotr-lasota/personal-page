trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
  FRONTEND_FOLDER: "frontend"
  FRONTEND_BUILD_FOLDER: "${{ variables.FRONTEND_FOLDER }}/build"

steps:
  - checkout: self
    displayName: Checkout code
    submodules: true

  - task: Cache@2
    displayName: Cache Yarn packages
    inputs:
      key: 'yarn | "$(Agent.OS)" | ${{ variables.FRONTEND_FOLDER }}/yarn.lock'
      restoreKeys: yarn | "$(Agent.OS)"
      path: $(YARN_CACHE_FOLDER)

  - script: yarn --frozen-lockfile
    displayName: Install dependencies
    workingDirectory: ${{ variables.FRONTEND_FOLDER }}
    env:
      YARN_CACHE_FOLDER: ${{ variables.YARN_CACHE_FOLDER }}

  - script: yarn lint
    displayName: Check for linting errors
    workingDirectory: ${{ variables.FRONTEND_FOLDER }}

  - script: yarn test
    displayName: Run tests
    workingDirectory: ${{ variables.FRONTEND_FOLDER }}
    env:
      CI: true

  - script: yarn build
    displayName: Build a production bundle
    workingDirectory: ${{ variables.FRONTEND_FOLDER }}
    env:
      GENERATE_SOURCEMAP: false

  - task: AzureStaticWebApp@0
    displayName: Deploy Static Web Application
    inputs:
      app_location: ${{ variables.FRONTEND_BUILD_FOLDER }}
      output_location: ""
      skip_app_build: true
      azure_static_web_apps_api_token: $(deployment_token)
